on: [push, pull_request]

name: Continuous Integration Lib

jobs:
  test:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        rust:
          - stable
          - beta
          - 1.38.0
        experimental: [false]
        include:
          - rust: nightly
            experimental: true

    steps:
      - uses: actions/checkout@v2
        name: Checkout

      - uses: actions-rs/toolchain@v1
        name: Install Toolchain
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - uses: actions-rs/cargo@v1
        name: Check
        with:
          command: check
          args: -p ninres

      - uses: actions-rs/cargo@v1
        name: Test
        with:
          command: test
          args: -p ninres

      - uses: actions-rs/cargo@v1
        name: Fmt
        with:
          command: fmt
          args: -p ninres -- --check

      - uses: actions-rs/cargo@v1
        name: Clippy
        with:
          command: clippy
          args: -p ninres -- -D warnings

  publish:
    if: github.ref == 'refs/heads/master'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout

      - uses: actions-rs/toolchain@v1
        name: Install Toolchain
        with:
          profile: minimal
          toolchain: beta
          override: true

      - name: Check version
        run: |
          cargo install cargo-whatfeatures --no-default-features --features "rustls"
          export LIB_VERSION=$(cat ninres/Cargo.toml | grep version | head -1 | sed 's/[",(version = )]//g')
          echo LIB_VERSION=$LIB_VERSION
          export CRATE_VERSION_EXISTS=$(NO_COLOR=1 ./ninres/crate_version_exists.sh $LIB_VERSION)
          echo CRATE_VERSION_EXISTS=$CRATE_VERSION_EXISTS

      - name: Deploy to Crates.io
        env:
          CARGO_CREDENTIALS: ${{ secrets.CARGO_CREDENTIALS }}
        run: bash ninres/crate_publish.sh
        continue-on-error: true
